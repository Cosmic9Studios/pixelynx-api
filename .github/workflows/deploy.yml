name: 'Deploy'
on: ['deployment']

jobs:
  deploy_staging:
    if: contains(github.ref, 'refs/tags') && github.event.deployment.environment == 'staging'
    runs-on: ubuntu-latest
    steps:
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
    
    - name: Deploy service to Cloud Run
      uses: stefda/action-cloud-run@v1.0
      with:
        image: gcr.io/pixelynx-staging/pixelynx-api:${{ steps.get_version.outputs.VERSION }}
        service: pixelynx-api
        project: pixelynx-staging
        region: us-central1
        service key: ${{ secrets.GCP_SERVICE_KEY_STAGING }}
    
    - name: Update deployment status (success)
      if: success()
      uses: chrnorm/deployment-status@releases/v1
      with:
        token: "${{ secrets.GITHUB_TOKEN }}"
        target_url: https://staging.pixelynx.com
        state: "success"
        deployment_id: ${{ github.run_id }}

    - name: Update deployment status (failure)
      if: failure()
      uses: chrnorm/deployment-status@releases/v1
      with:
        token: "${{ secrets.GITHUB_TOKEN }}"
        target_url: https://staging.pixelynx.com
        state: "failure"
        deployment_id: ${{ github.run_id }}
  
  deploy_production:
    if: contains(github.ref, 'refs/tags') && github.event.deployment.environment == 'production'
    runs-on: ubuntu-latest
    steps:
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

    - name: Create GitHub deployment
      uses: chrnorm/deployment-action@releases/v1
      id: deployment
      with:
        token: "${{ secrets.GITHUB_TOKEN }}"
        target_url: https://pixelynx.com
        environment: production
  
    - name: Deploy service to Cloud Run
      uses: stefda/action-cloud-run@v1.0
      with:
        image: gcr.io/pixelynx-staging/pixelynx:${{ steps.get_version.outputs.VERSION }}
        service: pixelynx-api
        project: pixelynx
        region: us-central1
        service key: ${{ secrets.GCP_SERVICE_KEY_STAGING }}
      
    - name: Update deployment status (success)
      if: success()
      uses: chrnorm/deployment-status@releases/v1
      with:
        token: "${{ secrets.GITHUB_TOKEN }}"
        target_url: https://pixelynx.com
        state: "success"
        deployment_id: ${{ github.run_id }}
  
    - name: Update deployment status (failure)
      if: failure()
      uses: chrnorm/deployment-status@releases/v1
      with:
        token: "${{ secrets.GITHUB_TOKEN }}"
        target_url: https://pixelynx.com
        state: "failure"
        deployment_id: ${{ github.run_id }}
        