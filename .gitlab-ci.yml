

variables: 
  REGISTRY: registry.gitlab.com
  CONTAINER_RELEASE_IMAGE: $REGISTRY/cosmic9studios/assetstore/web:latest

stages:
  - build
  - deploy

build:
  image: docker:git
  services:
  - docker:dind
  stage: build
  before_script:
    - apk add --update nodejs nodejs-npm
    - npm install -g semantic-release@15
    - npm install -g @semantic-release/docker
  script:
    - cd api
    - export DOCKER_USERNAME=gitlab-ci-token
    - export DOCKER_PASSWORD=$CI_BUILD_TOKEN
    - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD $REGISTRY
    - docker build -t $CONTAINER_RELEASE_IMAGE .
    - npx semantic-release -b $CI_COMMIT_REF_NAME -p '@semantic-release/docker'

deploy: 
  image: mcr.microsoft.com/dotnet/core/sdk:2.2
  stage: deploy
  environment: production
  script:
    - dotnet tool install -g Octopus.DotNet.Cli
    - export PATH="$PATH:/root/.dotnet/tools"
    - dotnet octo pack --format=zip --id AssetStore.Api --basePath ./api --include=*.yaml
    - dotnet octo push --package "$(find . -type f -iname '*.zip' -print -quit)" --replace-existing --server https://cosmic9studios.octopus.app --apiKey $OCTO_KEY
    - dotnet octo create-release --project AssetStore --server https://cosmic9studios.octopus.app/ --apiKey $OCTO_KEY
  only: 
    - master

#deploy:
#  stage: deploy
#  script:
#    - docker pull $CONTAINER_TEST_IMAGE
#    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
#    - docker push $CONTAINER_RELEASE_IMAGE
#  only:
#    - master
